[1/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/person_detect_model_data.cc.obj
[2/9] Performing build step for 'bootloader'
[1/1] cd /home/jtgomez/esp/projects_tf/digit_classif/build/bootloader/esp-idf/esptool_py && /home/jtgomez/esp/idf-tools/python_env/idf5.3_py3.10_env/bin/python /home/jtgomez/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/jtgomez/esp/projects_tf/digit_classif/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable person_detection.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32 image...
Merged 3 ELF sections
Successfully created esp32 image.
Generated /home/jtgomez/esp/projects_tf/digit_classif/build/person_detection.bin
[7/7] cd /home/jtgomez/esp/projects_tf/digit_classif/build/esp-idf/esptool_py && /home/jtgomez/esp/idf-tools/python_env/idf5.3_py3.10_env/bin/python /home/jtgomez/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/jtgomez/esp/projects_tf/digit_classif/build/partition_table/partition-table.bin /home/jtgomez/esp/projects_tf/digit_classif/build/person_detection.bin
person_detection.bin binary size 0x5c500 bytes. Smallest app partition is 0x180000 bytes. 0x123b00 bytes (76%) free.
